const mysql = require('mysql2/promise');
const config = require('./config.json');

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const defaultGroups = [
  {
    name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    color: '#FF4444',
    css_styles: 'font-weight: bold; color: #FF4444;',
    permissions: JSON.stringify(['all'])
  },
  {
    name: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä',
    color: '#FF8800',
    css_styles: 'font-weight: bold; color: #FF8800;',
    permissions: JSON.stringify(['moderate', 'ban', 'mute', 'edit_posts'])
  },
  {
    name: 'VIP –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    color: '#AA00FF',
    css_styles: 'font-weight: bold; color: #AA00FF;',
    permissions: JSON.stringify(['vip_features', 'custom_avatar'])
  },
  {
    name: '–ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫',
    color: '#00AA00',
    css_styles: 'font-weight: bold; color: #00AA00;',
    permissions: JSON.stringify(['post', 'comment', 'vote'])
  },
  {
    name: '–ù–æ–≤–∏—á–æ–∫',
    color: '#888888',
    css_styles: 'color: #888888;',
    permissions: JSON.stringify(['post', 'comment'])
  },
  {
    name: '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',
    color: '#666666',
    css_styles: 'color: #666666; text-decoration: line-through;',
    permissions: JSON.stringify([])
  }
];

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
const defaultAchievements = [
  {
    name: '–ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç',
    description: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–ª –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä—É–º–µ',
    icon: 'üìù',
    color: '#4CAF50'
  },
  {
    name: '–ê–∫—Ç–∏–≤–Ω—ã–π –ø–∏—Å–∞—Ç–µ–ª—å',
    description: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–ª 50 —Å–æ–æ–±—â–µ–Ω–∏–π',
    icon: '‚úçÔ∏è',
    color: '#2196F3'
  },
  {
    name: '–ú–∞—Å—Ç–µ—Ä –æ–±—â–µ–Ω–∏—è',
    description: '–û–ø—É–±–ª–∏–∫–æ–≤–∞–ª 100 —Å–æ–æ–±—â–µ–Ω–∏–π',
    icon: 'üí¨',
    color: '#9C27B0'
  },
  {
    name: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π',
    description: '–ü–æ–ª—É—á–∏–ª 100 –ª–∞–π–∫–æ–≤',
    icon: 'üëç',
    color: '#FF9800'
  },
  {
    name: '–ü–æ–º–æ—â–Ω–∏–∫',
    description: '–ü–æ–º–æ–≥ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
    icon: 'ü§ù',
    color: '#4CAF50'
  },
  {
    name: '–≠–∫—Å–ø–µ—Ä—Ç',
    description: '–ü–æ–ª—É—á–∏–ª 500 –ª–∞–π–∫–æ–≤',
    icon: 'üèÜ',
    color: '#FFD700'
  },
  {
    name: '–í–µ—Ç–µ—Ä–∞–Ω',
    description: '–ù–∞ —Ñ–æ—Ä—É–º–µ –±–æ–ª–µ–µ 1 –≥–æ–¥–∞',
    icon: 'üéñÔ∏è',
    color: '#795548'
  },
  {
    name: '–ö—Ä–µ–∞—Ç–∏–≤—â–∏–∫',
    description: '–°–æ–∑–¥–∞–ª 10 —Ç–µ–º',
    icon: 'üí°',
    color: '#E91E63'
  },
  {
    name: '–ù–æ—á–Ω–∞—è —Å–æ–≤–∞',
    description: '–ê–∫—Ç–∏–≤–µ–Ω –≤ –Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è',
    icon: 'ü¶â',
    color: '#607D8B'
  },
  {
    name: '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
    description: '–ê–∫—Ç–∏–≤–µ–Ω —Ä–∞–Ω–æ —É—Ç—Ä–æ–º',
    icon: 'üåÖ',
    color: '#FF5722'
  }
];

async function initializeData() {
  let connection;
  
  try {
    connection = await mysql.createConnection(config.database);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≥—Ä—É–ø–ø—ã
    const [existingGroups] = await connection.execute('SELECT COUNT(*) as count FROM user_groups');
    
    if (existingGroups[0].count === 0) {
      console.log('–°–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      
      for (const group of defaultGroups) {
        await connection.execute(`
          INSERT INTO user_groups (name, color, css_styles, permissions, created_at)
          VALUES (?, ?, ?, ?, NOW())
        `, [group.name, group.color, group.css_styles, group.permissions]);
      }
      
      console.log('‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã —Å–æ–∑–¥–∞–Ω—ã');
    } else {
      console.log('‚ÑπÔ∏è –ì—Ä—É–ø–ø—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    const [existingAchievements] = await connection.execute('SELECT COUNT(*) as count FROM achievements');
    
    if (existingAchievements[0].count === 0) {
      console.log('–°–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è...');
      
      for (const achievement of defaultAchievements) {
        await connection.execute(`
          INSERT INTO achievements (name, description, icon, color, created_at)
          VALUES (?, ?, ?, ?, NOW())
        `, [achievement.name, achievement.description, achievement.icon, achievement.color]);
      }
      
      console.log('‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã');
    } else {
      console.log('‚ÑπÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ');
    }
    
    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ app.js
module.exports = { initializeData };

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  initializeData().then(() => {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
  }).catch((error) => {
    console.error('–û—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
}
