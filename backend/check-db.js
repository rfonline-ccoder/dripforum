const mysql = require('mysql2/promise');
const config = require('./config.json');

const checkDatabase = async () => {
  const connection = await mysql.createConnection(config.database);
  
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    console.log('üìã –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü:');
    const [tables] = await connection.execute('SHOW TABLES');
    console.log(tables);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ users:');
    try {
      const [users] = await connection.execute('SELECT id, username, email, role, group_id FROM users LIMIT 10');
      if (users.length === 0) {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ users –ø—É—Å—Ç–∞!');
      } else {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
        users.forEach(user => {
          console.log(`  - ID: ${user.id}, Username: ${user.username}, Role: ${user.role}, Group: ${user.group_id}`);
        });
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã users:', error.message);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—ã
    console.log('\nüè∑Ô∏è –ì—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    try {
      const [groups] = await connection.execute('SELECT id, name, color FROM user_groups');
      if (groups.length === 0) {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ user_groups –ø—É—Å—Ç–∞!');
      } else {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø: ${groups.length}`);
        groups.forEach(group => {
          console.log(`  - ID: ${group.id}, Name: ${group.name}, Color: ${group.color}`);
        });
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã user_groups:', error.message);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    console.log('\nüèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:');
    try {
      const [achievements] = await connection.execute('SELECT id, name, description FROM achievements');
      if (achievements.length === 0) {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ achievements –ø—É—Å—Ç–∞!');
      } else {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${achievements.length}`);
        achievements.forEach(achievement => {
          console.log(`  - ID: ${achievement.id}, Name: ${achievement.name}`);
        });
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã achievements:', error.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:', error.message);
  } finally {
    await connection.end();
  }
};

checkDatabase();
